name: CI/CD Pipeline with Vercel Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        python-version: [3.10]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Backend (C++)
      - name: Set up C++
        uses: aminya/setup-cpp@v1
        with:
          compiler: gcc
          cmake: true
          ninja: true

      - name: Build and test backend
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .
          ctest --output-on-failure

      # Frontend (React)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      # Latency Test (Python)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        working-directory: latency_test
        run: pip install -r requirements.txt

      - name: Run latency test
        working-directory: latency_test
        run: python websocket_latency_test.py

  deploy-frontend:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Deploy to Vercel
        working-directory: frontend
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

# Notes:
# - Add your Vercel token and project/org IDs as GitHub secrets (VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID). 